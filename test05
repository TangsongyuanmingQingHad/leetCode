package com.had.pqst;
/**
 * Given n non-negative integers representing an elevation map 
 * where the width of each bar is 1, compute how much water it is able to trap after raining.
 * The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 
 * 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!
	Example:
	
	              *  
	      *       * *   *
	  *   * *   * * * * * *
	0 1 2 3 4 5 6 7 8 9 0 1
	Input: [0,1,0,2,1,0,1,3,2,1,2,1]
	Output: 6
 * @author had13
 *
 */
public class TrappingRainWater {
	public int trap(int[] height) {
		int left = 0;
		int right = height.length - 1;
		int res = 0;
		int leftMax = 0;
		int rightMax = 0;
		while(left < right) {
			if(height[left] < height[right]) {
				leftMax = Math.max(height[left],leftMax);
				res += leftMax - height[left];
				left ++;
			}else {
				rightMax = Math.max(height[right],rightMax);
				res += rightMax - height[right];
				right --;
			}
		}
		return res;
	}
}
